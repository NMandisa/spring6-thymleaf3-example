<?xml version="1.0" encoding="UTF-8"?>
<!-- ~ Copyright (c) 2023. ~ Author : Noxolo.Mkhungo | +27(0)71 741 6469 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/data/jpa
    https://www.springframework.org/schema/data/jpa/spring-jpa.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder location="classpath:./application.properties"/>
    <context:annotation-config />
    <!--<context:component-scan  base-package="za.co.squnga.repository" />-->
    <!--<context:component-scan base-package="za.co.squnga.facade, za.co.squnga.service,za.co.squnga.repository"/>-->
    <context:component-scan base-package="za.co.squnga.repository">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
    </context:component-scan>
    <jpa:repositories base-package="za.co.squnga.repository" entity-manager-factory-ref="sessionFactory" transaction-manager-ref="transactionManager"/>
    <tx:annotation-driven />
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"  destroy-method="close">
        <constructor-arg ref="hikariConfig" />
    </bean>

    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="poolName" value="${hikari.config.poolName}" />
        <property name="connectionTestQuery" value="${hikari.config.connectionTestQuery}" />
        <property name="dataSourceClassName" value="${hikari.config.dataSourceClassName}" />
        <property name="autoCommit" value="true"/>
       <!-- <property name="transactionIsolation" value="${hikari.config.transactionIsolation}"/>-->
        <!--<property name="threadFactory" value="" />-->
        <property name="dataSourceProperties">
            <props>
                <prop key="url">${hikari.config.dataSource.url}</prop>
                <prop key="user">${hikari.config.dataSource.user}</prop>
                <prop key="password">${hikari.config.dataSource.password}</prop>
            </props>
        </property>
    </bean>

    <bean id="sessionFactory" name="{sessionFactory,entityManagerFactory}" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="za.co.squnga.entity" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.transactionIsolation">${hibernate.hikari.dataSource.transactionIsolation}</prop>
                <prop key="hibernate.dialect.storage_engine">${hibernate.dialect.storage_engine}</prop>
                <prop key="hibernate.id.new_generator_mapping">${hibernate.id.new_generator_mapping}</prop>
                <prop key="hibernate.hikari.dataSource.minimumIdle">${hibernate.hikari.dataSource.minimumIdle}</prop>
                <prop key="hibernate.hikari.dataSource.maximumPoolSize">${hibernate.hikari.dataSource.maximumPoolSize}</prop>
                <prop key="hibernate.hikari.dataSource.idleTimeout">${hibernate.hikari.dataSource.idleTimeout}</prop>
            </props>
        </property>
    </bean>

    <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="sessionFactory"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
        <property name="packagesToScan" value="za.co.squnga.entity" />
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>












    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
         <property name="basename" >
             <value>messages.messages</value>
         </property>
         <property name="defaultEncoding" value="UTF-8"/>
     </bean>

   <!-- https://stackoverflow.com/questions/57093867/java-how-to-configure-log4j2-xml
    <bean id="log4jInitialization" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="org.apache.logging.log4j.core.LoggerContext" />
        <property name="targetMethod" value="getContext" />
        <property name="arguments" value="false"/>
    </bean>

    <bean id="log4jContext" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="log4jInitialization"/>
        <property name="targetMethod" value="setConfigLocation"/>
        <property name="arguments" value="classpath:/log4j2.properties"/>
    </bean>-->

</beans>